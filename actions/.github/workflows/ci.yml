name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-selftest:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps (clang, lld, make, dieharder)  # fasm opcional
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            clang lld make dieharder

      - name: Print toolchain
        run: |
          clang --version
          ld.lld --version || true
          dieharder -h | head -n1 || true

      - name: Detect CPU features (aes / rdseed)
        id: cpu
        run: |
          set -e
          FEATS=$(grep -m1 -oE 'aes|rdseed' /proc/cpuinfo | sort -u | tr '\n' ' ')
          echo "cpu-features: $FEATS"
          if grep -qi aes /proc/cpuinfo; then echo "HAS_AES=1" >> $GITHUB_ENV; else echo "HAS_AES=0" >> $GITHUB_ENV; fi
          if grep -qi rdseed /proc/cpuinfo; then echo "HAS_RDSEED=1" >> $GITHUB_ENV; else echo "HAS_RDSEED=0" >> $GITHUB_ENV; fi

      - name: Build (default)
        working-directory: ./src
        env:
          CC: clang
          LD: lld
          # -march genérico pro runner + AES sempre habilitado; RDSEED só se existir
          CFLAGS: "-O3 -pipe -fuse-ld=lld -march=x86-64-v2 -maes"
        run: |
          set -e
          if [ "${HAS_RDSEED}" = "1" ]; then CFLAGS="${CFLAGS} -mrdseed"; fi
          echo "CFLAGS=${CFLAGS}"
          # NO_FASM=1 evita tentar montar/ligar os demos ASM no CI
          make -j"$(nproc)" NO_FASM=1 CFLAGS="${CFLAGS}"

      - name: Run selftest (expected: SELFTEST: OK)
        working-directory: ./src
        run: |
          set -e
          ./build/selftest | tee selftest.log
          grep -q "SELFTEST: OK" selftest.log

      - name: Build (FIPS mode)
        working-directory: ./src
        env:
          CC: clang
          LD: lld
          CFLAGS: "-O3 -pipe -fuse-ld=lld -march=x86-64-v2 -maes"
        run: |
          set -e
          if [ "${HAS_RDSEED}" = "1" ]; then CFLAGS="${CFLAGS} -mrdseed"; fi
          make clean
          make -j"$(nproc)" fips NO_FASM=1 CFLAGS="${CFLAGS}"

      - name: Run selftest (FIPS mode)
        working-directory: ./src
        run: |
          set -e
          RT_FIPS_MODE=1 ./build/selftest | tee selftest_fips.log
          grep -q "SELFTEST: OK" selftest_fips.log

      - name: Dieharder smoke (short & optional)
        working-directory: ./src
        continue-on-error: true
        timeout-minutes: 5
        run: |
          set -e
          ./build/stream_randomtoad | dieharder -g 200 -d 0 -d 1 -d 2 -d 15 -p 3 | tee dieharder_smoke.log

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: randomtoad-build-and-logs
          path: |
            src/build/**
            src/selftest.log
            src/selftest_fips.log
            src/dieharder_smoke.log
          if-no-files-found: warn
